@* View of a Existing Request *@
@model PES.ViewModels.VacHeadReqViewModel
@using PES.Models;

@{
    int useProfile = (int)Session["UserProfile"];
}
<div>
    <section>
        <div class="page-header text-center">
            <h1>Vacation Request</h1>
        </div>
        @Html.HiddenFor(model => model.VacationHeaderReqId)
        @using (Html.BeginForm("AcctionRequest", "VacationRequest", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

        <form id="form" class="form-horizontal">
            <div class="form-group">
                <div class="container flexEnd">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Title, "Request Title", new { @class = "control-label col-form-label" })
                        @if (Model.status.ToLower() == "rejected")
                        {
                            @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
                        }
                        else 
                        {
                            @Html.TextBoxFor(model => model.Title, new { @class = "form-control", @disabled = "disabled" })
                        }

                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    </div>
                    <div id="vacationarea" class="col-md-2 text-center">
                        <label>
                            Vacation Days:
                            <input id="daysReq" name="NoVacRequested" type="text" class="daysReq" value="0" readonly />
                        </label>
                    </div>
                    <div id="requestarea" class="col-md-2 text-left">
                        <label>
                            Days Requested:
                            <span id="daysReq" name="" class="label label-default">@Model.NoVacDays</span>                           
                        </label>
                    </div>
                    <div id="reqStatus" class="col-md-5 text-right">
                        <label class="control-label text-center">
                            Request Status:
                            <span class="label label-default" id="status">@Model.status</span>
                        </label>
                    </div>
                </div> <!-- container end -->
            </div> <!-- form-group end -->
            <!-- PARTIAL VIEW WITH REQUEST DATES -->
            
            @Html.Partial("_VacationDatesPartial", Model)

            <div class="form-group">
                <div class="container">
                    <div class="col-md-4">
                        <span class="label label-warning">All vacations days must be in the same month</span>
                    </div>
                </div> <!-- container end -->
            </div><!-- form-group end -->
            <div class="form-group">
                <div class="container flexEnd">
                    <div class="col-md-8">
                        <!--COMMENTS-->
                        @Html.LabelFor(model => model.Comments, "Comments", new { @class = "control-label" })
                        @if (Model.status.ToLower() == "rejected")
                        {
                            @Html.TextAreaFor(model => model.Comments, new { @class = "form-control", @placeholder = "Add a comment or attach lead's approval", @style = "min-width:100%;" })
                        }
                        else
                        {
                            @Html.TextAreaFor(model => model.Comments, new { @class = "form-control", @placeholder = "Add a comment or attach lead's approval", @style = "min-width:100%;", @disabled = "disabled" })
                        }

                        @Html.ValidationMessageFor(model => model.Comments, "", new { @class = "text-danger" })                     
                    </div>
                                     
                     <!-- BLOCK BUTTONS -->                            
                     <div class="col-md-4 text-center">

                        @if (Model.status.ToLower() == "pending")
                        {
                            <a href="@Url.Action("HistoricalResource", "VacationRequest")" class="btn btn-lg btn-primary btn-block">Return to Historical</a>

                            if (useProfile == (int)ProfileUser.Manager)
                            {
                                <button id="reject" value="Model.VacationHeaderReqId" type="button" class="btn btn-lg btn-danger btn-block" data-toggle="modal" data-target=".bs-example-modal-sm">Reject</button>
                                @Html.Partial("_ModalRejectRequestPartial", Model.Modal)

                                <div style="line-height:40%;">
                                    <br />
                                </div>

                                <button id="aprove" value="Model.VacationHeaderReqId" type="button" class="btn btn-lg btn-success btn-block" data-toggle="modal" data-target=".bs-example-modal-sm">Aprove</button>
                                 @Html.Partial("_ModalApproveRequestPartial", Model.Modal)
                            }

                        }

                        else if (Model.status.ToLower() == "approved")
                        { 
                                <a href="@Url.Action("HistoricalResource", "VacationRequest")" class="btn btn-lg btn-primary btn-block">Return to Historical</a>
                                <button id="cancelReq" value="Model.VacationHeaderReqId" type="button" class="btn btn-lg btn-danger btn-block" data-toggle="modal" data-target=".bs-example-modal-sm">Cancel</button>
                                @Html.Partial("_ModalCancelRequestPartial", Model.Modal)
                        }

                        else if (Model.status.ToLower() == "rejected" && useProfile == (int)ProfileUser.Manager)
                        {
                            <a href="@Url.Action("HistoricalResource", "VacationRequest")" class="btn btn-lg btn-primary btn-block">Return to Historical</a>
                        }

                        else if (Model.status.ToLower() == "rejected" && useProfile == (int)ProfileUser.Resource)
                        {
                            <a href="@Url.Action("HistoricalResource", "VacationRequest")" class="btn btn-lg btn-primary btn-block">Return to Historical</a>
                            <button id="resendReq" type="button" class="btn btn-lg btn-primary btn-block" data-toggle="modal" data-target=".bs-example-modal-sm">Resend</button>
                        }

                        else if (Model.status.ToLower() == "canceled")
                        {
                            <a href="@Url.Action("HistoricalResource", "VacationRequest")" class="btn btn-lg btn-primary btn-block">Return to Historical</a>
                        }

                    </div>
                </div> <!-- container end -->
            </div> <!-- form-group end -->
        </form>
        }
    </section>
</div>

@section Styles
{
    @Styles.Render("~/Content/css/vacation_request_resource.css")
    @Styles.Render("~/content/themes/base/daterangepicker.css")
}

@section Scripts
{

    @Scripts.Render("~/Scripts/vacationsRequest.js")
    @Scripts.Render("~/Scripts/moment.js")
    @Scripts.Render("~/Scripts/daterangepicker.js")

}