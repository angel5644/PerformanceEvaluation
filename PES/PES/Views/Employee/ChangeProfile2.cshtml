@model PES.ViewModels.ChangeProfileViewModel
@using PES.Models

@{
    ViewBag.Title = "View";
}
<hr />
<div class="row">
    <div class="col-md-12 well">
        @using (Html.BeginForm("ChangeProfile2", "Employee", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h3>Change Profile</h3>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.textEmail, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                    @Html.LabelFor(model => model.CurrentProfile, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-2">
                        @Html.EditorFor(model => model.CurrentProfile.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    </div>
                </div>
                <div class="form-group">
                    @Html.Label("New Profile", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-3">
                        @Html.DropDownListFor(model => model.SelectedProfile, Model.ListProfiles, new { @class = "inlined form-control", @style = "width:100%", @id = "selectedProfile" })
                        @Html.ValidationMessageFor(model => model.SelectedProfile, "", new { @class = "text-danger" })
                    </div>
                    <div id="dropdownManager">
                        @Html.LabelFor(model => model.SelectedManager, htmlAttributes: new { @class = "control-label col-md-2", @id = "profileLabel" })
                        <div class="col-md-3">
                            @Html.DropDownListFor(model => model.SelectedManager, Model.ListManagers, new { @class = "inlined form-control", @style = "width:100%", @id = "selectedManager" })
                            @Html.ValidationMessageFor(model => model.SelectedManager, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <hr />

                @if (Model.Org.Count > 0)
                {
                    <table class="table" id="table-employees">
                        <thead>
                            <tr>
                                <th class="disableTextDecoration">
                                    @Html.DisplayNameFor(model => model.FirstName)
                                </th>
                                <th class="disableTextDecoration">
                                    @Html.DisplayNameFor(model => model.LastName)
                                </th>
                                <th class="disableTextDecoration">
                                    @Html.DisplayNameFor(model => model.Email)
                                </th>
                                <th class="disableTextDecoration" id="manger-director"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Org)
                            {
                                <tr>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.FirstName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.LastName)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Email)
                                        </td>
                                        <td>
                                           @Html.DropDownListFor(modelItem => item.SelectedManager, item.ListManagers, new { @class = "inlined form-control", @style = "width:100%", @id = "selectedNewManager" })
                                        </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "ViewEmployees")
</div>


@section Styles{
    @Styles.Render("~/Content/css/select2-bootstrap.css")
    @Styles.Render("~/Content/css/select2.min.css")
}
@section Scripts{
    @Scripts.Render("~/scripts/validations.js")
    @Scripts.Render("~/bundles/jqueryval")
}