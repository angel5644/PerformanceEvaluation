@model IEnumerable<PES.ViewModels.EmployeeDetailsViewModel>
@using PES.Models

<hr />
<div class="row">
    <div class="col-md-6">
        <p>
            @Html.ActionLink("Create New", "InsertEmployee")
        </p>
    </div>
    <div class="pull-right">
        <span>
            @Html.Hidden("status", "enabled")
            @Html.CheckBox("ShowEnables", true, new { @id = "showEnables" })
            Show Enables |
        </span>
        <span>
            @Html.CheckBox("ShowDisables", true, new { @id = "showDisables" })
            Show Disables
        </span>
    </div>
    <hr />
    <div class="col-md-12">
        <div class="well responsive">
            <table class="table" id="table-employees">
                <thead>
                <tr>
                    <th class="disableTextDecoration">
                        @Html.DisplayNameFor(model => model.FirstName)
                    </th>
                    <th class="disableTextDecoration">
                        @Html.DisplayNameFor(model => model.LastName)
                    </th>
                    <th class="disableTextDecoration">
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th class="disableTextDecoration">
                        Profile
                    </th>
                    <th class="disableTextDecoration">
                        Manager
                    </th>
                    <th class="disableTextDecoration">Actions</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var item in Model)
            {
                    <tr>
                        @*@if (item.EndDate == null)
                        {*@
                            @Html.Hidden("Id", item.EmployeeId)
                            <td>
                                @Html.DisplayFor(modelItem => item.FirstName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.LastName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @(item.Profile.Name)
                            </td>
                            @if (item.ProfileId == (int)ProfileUser.Director)
                            {
                                <td>
                                    @(item.FirstName + " " + item.LastName)
                                </td>
                            }
                            else
                            {
                                <td>
                                    @(item.Manager.FirstName + " " + item.Manager.LastName)
                                </td>
                            }
                            <td>
                                @Html.ActionLink("Edit", "UpdateEmployee", "Employee", new { id = item.EmployeeId }, new { @class = "edit-button" } ) |
                                @Html.ActionLink("Details", "EmployeeDetails", "Employee", new { email = item.Email }, null) |
                                @*@Html.ActionLink("Disable", "DisableEmployee", "Employee", new { id = item.EmployeeId }, new { @id = "DisableOption" + item.EmployeeId})*@
                                <a href="#" class="enableDisable" data-employee-id="@item.EmployeeId" data-option="@(item.EndDate != null ? "enable" : "disable")" >@(item.EndDate != null ? "Enable" : "Disable")</a>
                            </td>
                         @* } *@
                        @*else
                        {
                            <td style="text-decoration:line-through">
                                @Html.DisplayFor(modelItem => item.FirstName)
                            </td>
                            <td style="text-decoration:line-through">
                                @Html.DisplayFor(modelItem => item.LastName)
                            </td>
                            <td style="text-decoration:line-through">
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td style="text-decoration:line-through">
                                @(item.Profile.Name)
                            </td>
            
                            <td style="text-decoration:line-through">
                                @(item.Manager.FirstName + " " + item.Manager.LastName)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", null) |
                                @Html.ActionLink("Details", "EmployeeDetails", "Employee", new {email = item.Email}, null) |
                                @Html.ActionLink("Enable", "EnableEmployee", "Employee", new { id = item.EmployeeId }, null)
                            </td>
                         }*@
                    </tr>
                }
                </tbody>
            </table>
        </div>
    </div>
</div>


@section Scripts {
    @*<script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap.min.js"></script>*@
    @Scripts.Render("~/Scripts/jquery.dataTables.min.js")
    @Scripts.Render("~/Scripts/dataTables.bootstrap.min.js")
    @Scripts.Render("~/Scripts/enable-disable.js")
    @Scripts.Render("~/Scripts/showEmployees.js")

    <script type="text/javascript">
        $(document).ready(function () {
            $("#table-employees").DataTable();
        })
    </script>
}

@section Styles{
    @Styles.Render("~/Content/datatables/dataTables.bootstrap.min.css")
    @Styles.Render("~/Content/ExportDataTables/buttons.dataTables.min.css")

    <style type="text/css">
        line-through {
            text-decoration: line-through;
        }
    </style>
}