@model PES.ViewModels.PerformanceFilesPartial

    <div class="row text-center">
        <div class="col-md-12">
            <h2>Historical Reports</h2>
        </div>
    </div>
    <hr />
<div class="row">
    <div class="col-md-12">
    <table class="table" id="mainTable">
        <thead>
            <tr>
                <th></th>
                <th>
                    Year
                </th>
                <th>
                   Period
                </th>
            </tr>
        </thead>
            @foreach (var item in Model.ListReports)
    {
        <tbody>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayFor(modelItem => item.Year)
                </th>
                @if (item.Period == 1)
                {
                    <th onmouseover="select(this)" onmouseout="unselect(this)">
                        Period @Html.DisplayFor(modelItem => item.Period) (January - June)
                    </th>
                }
                else
                {
                    <th onmouseover="select(this)" onmouseout="unselect(this)">
                        Period @Html.DisplayFor(modelItem => item.Period) (July - December)
                    </th>
                }
            </tr>
        </tbody>
    }
    </table>
        <div id="performancePartialPeriods">
    @Html.Partial("_PerformanceFilesPeriodsPartial")
</div>
        </div>
    </div>

@section Styles{
    @Styles.Render("~/Content/datatables/dataTables.bootstrap.min.css")
    @Styles.Render("~/Content/ExportDataTables/buttons.dataTables.min.css")
}

@section Scripts {
    @Scripts.Render("~/Scripts/jquery.dataTables.min.js")
    @Scripts.Render("~/Scripts/dataTables.bootstrap.min.js")
<script>
    function select(x) {
        x.style.color = "#428bca";
    }
    function unselect(x) {
        x.style.color = "#333333";
}
    </script>

    <script type="text/javascript">
            var listPerformances = [];

            $(document).ready(function () {
                setupTable();
            });

            function setupTable() {
                var tableOptions = {
                    dom: '<"row"<"col-md-12"B>><"row"<"col-md-6"l><"col-md-6"f>>rtip',
                    buttons: [
                        'excel', 'pdf'],
                    lengthMenu: [[10, 25, 50, 100, -1], [10, 25, 50, 100, "All"]],
                    pageLength: 10,
                        order: [[7, "desc"]],
                };
                $('#TableviewPeriods').DataTable(tableOptions);

                @*$("#submitFilesChanges").click(function () {
                    if (listPerformances.length > 0) {
                        var data = {
                            listPerformances: listPerformances
                        };

                        $.ajax({
                            url: "@Url.Action("UpdateRank", "PerformanceEvaluation")",
                            data: { listPerformances: listPerformances },
                        dataType: 'html',
                        type: 'POST'
                    })
                    .done(function (data) {
                        if (data) {

                            // Reload data
                            $("#performancePartial").hide().html(data).fadeIn("slow");

                            $('#Tableview').DataTable(tableOptions);
                        }
                    })
                    .fail(function (jqxhr, textStatus, error) {
                        alert("Error while saving changes. Please try again later.");
                    })
                    .always(function () {
                        //alert("finished");
                    });
                }
                });*@
            }

            function calculate(performanceId, element) {
                // total1
                var total1 = parseFloat($("#total1" + performanceId).text());
                if ($(element).val() == "") {
                    var rank = 1;
                }
                else {
                    var rank = parseFloat($(element).val());
                }
                var t1Rank = total1 * rank;
                t1Rank = Math.round(t1Rank * 100) / 100;

                // Assign new value to t1Rank
                $("#t1Rank" + performanceId).text(t1Rank);

                // --[ Add performance to be eddited
                var exists = false;
                if (listPerformances && listPerformances.length > 0) {
                    // Get performance ids
                    var ids = listPerformances.map(function (p) {
                        return p.performanceId;
                    });

                    // Check if already exists
                    exists = ids.indexOf(performanceId) != -1;

                    // If already exists
                    if (exists) {
                        // Get index of value to update
                        var index = ids.indexOf(performanceId);
                        // Update value
                        listPerformances[index].rankValue = rank;
                    }
                }

                // If does not exist yet
                if (!exists) {
                    // Create new performance to be updated
                    var intId = parseInt(performanceId);
                    var doubleRank = parseFloat(rank);
                    var newPerformance = new PerformanceRankHelper(intId, doubleRank);
                    // Add to the list
                    listPerformances.push(newPerformance);
                }
                // --]
            }
    </script>
}
